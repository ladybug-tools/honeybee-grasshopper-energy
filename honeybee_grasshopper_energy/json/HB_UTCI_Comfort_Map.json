{
  "version": "1.4.4", 
  "nickname": "UTCIMap", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "env_conds", 
        "description": "A folder containing CSV matrices with all of the environmental conditions\nthat were input to the comfort model. These can be loaded into Grasshopper\nusing the \"HB Read Environment Matrix\" component. This includes the following.\n* MRT\n* Air Temperature\n* Relative Humidity\n* Longwave MRT\n* Shortwave MRT Delta", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "utci", 
        "description": "A folder containing CSV maps of Universal Thermal Climate Index (UTCI)\ntemperatures for each sensor grid at each time step of the analysis.\nThis can be connected to the \"HB Read Thermal Matrix\" component to\nparse detailed results into Grasshopper. Values are in Celsius.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "condition", 
        "description": "A folder containing CSV maps of comfort conditions for each sensor\ngrid at each time step of the analysis. This can be connected to the\n\"HB Read Thermal Matrix\" component to parse detailed results into\nGrasshopper. Values are as follows.\n* -1 = unacceptably cold conditions\n*  0 = neutral (comfortable) conditions\n* +1 = unacceptably hot conditions", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "category", 
        "description": "A folder containing CSV maps of the heat/cold stress categories for\neach sensor grid at each time step of the analysis. This can be connected\nto the \"HB Read Thermal Matrix\" component to parse detailed results\ninto Grasshopper. This can be used to understand not just whether\nconditions are acceptable but how uncomfortably hot or cold they\nare. Values indicate the following.\n* -5 = extreme cold stress\n* -4 = very strong cold stress\n* -3 = strong cold stress\n* -2 = moderate cold stress\n* -1 = slight cold stress\n*  0 = no thermal stress\n* +1 = slight heat stress\n* +2 = moderate heat stress\n* +3 = strong heat stress\n* +4 = very strong heat stress\n* +5 = extreme heat stress", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "TCP", 
        "description": "Lists of values between 0 and 100 for the Thermal Comfort Percent (TCP).\nThese can be plugged into the \"LB Spatial Heatmap\" component along\nwith meshes of the sensor grids to visualize spatial thermal comfort.\nTCP is the percentage of occupied time where thermal conditions are\nacceptable/comfortable. Occupied hours are determined from the\noccuppancy schedules of each room (any time where the occupancy\nschedule is >= 0.1 will be considered occupied). Outdoor sensors\nare considered occupied at all times. More custom TCP studies can\nbe done by post-processing the condition results.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "HSP", 
        "description": "Lists of values between 0 and 100 for the Heat Sensation Percent (HSP).\nThese can be plugged into the \"LB Spatial Heatmap\" component along with\nmeshes of the sensor grids to visualize uncomfortably hot locations.\nHSP is the percentage of occupied time where thermal conditions are\nhotter than what is considered acceptable/comfortable. Occupied hours\nare determined from the occuppancy schedules of each room (any time\nwhere the occupancy schedule is >= 0.1 will be considered occupied).\nOutdoor sensors are considered occupied at all times. More custom HSP\nstudies can be done by post-processing the condition results.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "CSP", 
        "description": "Lists of values between 0 and 100 for the Cold Sensation Percent (CSP).\nThese can be plugged into the \"LB Spatial Heatmap\" component along with\nmeshes of the sensor grids to visualize uncomfortably cold locations.\nCSP is the percentage of occupied time where thermal conditions are\ncolder than what is considered acceptable/comfortable. Occupied hours\nare determined from the occuppancy schedules of each room (any time\nwhere the occupancy schedule is >= 0.1 will be considered occupied).\nOutdoor sensors are considered occupied at all times. More custom CSP\nstudies can be done by post-processing the condition results.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_model", 
      "description": "A Honeybee Model for which UTCI comfort will be mapped. Note that\nthis model should have radiance grids assigned to it in order\nto produce meaningful results.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_epw", 
      "description": "Path to an EPW weather file to be used for the comfort map simulation.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_ddy", 
      "description": "Path to a DDY file with design days to be used for the initial sizing\ncalculation of the energy simulation.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "north_", 
      "description": "A number between -360 and 360 for the counterclockwise difference\nbetween the North and the positive Y-axis in degrees. This can\nalso be Vector for the direction to North. (Default: 0).", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "run_period_", 
      "description": "An AnalysisPeriod to set the start and end dates of the simulation.\nIf None, the simulation will be annual.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_wind_speed_", 
      "description": "A single number for meteorological wind speed in m/s or an hourly\ndata collection of wind speeds that align with the input run_period_.\nThis will be used for all outdoor comfort evaluation.\n_\nThis can also be the path to a folder with csv files that align with\nthe model sensor grids. Each csv file should have the same name as\nthe sensor grid. Each csv file should contain a matrix of air speed\nvalues in m/s with one row per sensor and one column per timestep\nof the run period. Note that, when using this type of matrix input,\nthese values are not meteorological and should be AT HUMAN SUBJECT LEVEL.\n_\nIf unspecified, the EPW wind speed will be used for all outdoor sensors\nand all sensors on the indoors will use a wind speed of 0.5 m/s,\nwhich is the lowest acceptable value for the UTCI model.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "schedule_", 
      "description": "A schedule to specify the relevant times during which comfort\nshould be evaluated. This must either be a Ladybug Hourly Data\nCollection that aligns with the input run_period_ or the path to a\nCSV file with a number of rows equal to the length of the run_period_.\nIf unspecified, it will be assumed that all times are relevant for\noutdoor sensors and the energy model occupancy schedules will be\nused for indoor sensors.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "solar_body_par_", 
      "description": "Optional solar body parameters from the \"LB Solar Body Parameters\"\nobject to specify the properties of the human geometry assumed in the\nshortwave MRT calculation. The default assumes average skin/clothing\nabsorptivity and a human subject always has their back to the sun\nat a 45-degree angle (SHARP = 135).", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "radiance_par_", 
      "description": "Text for the radiance parameters to be used for ray\ntracing. (Default: -ab 2 -ad 5000 -lw 2e-05).", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "run_settings_", 
      "description": "Settings from the \"HB Recipe Settings\" component that specify\nhow the recipe should be run. This can also be a text string of\nrecipe settings.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_run", 
      "description": "Set to True to run the recipe and get results. This input can also be\nthe integer \"2\" to run the recipe silently.", 
      "type": "int", 
      "default": null
    }
  ], 
  "subcategory": "7 :: Thermal Map", 
  "code": "\nimport os\n\ntry:\n    from lbt_recipes.recipe import Recipe\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import lbt_recipes:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs, recipe_result\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component) and _run:\n    # create the recipe and set the input arguments\n    recipe = Recipe('utci_comfort_map')\n    recipe.input_value_by_name('model', _model)\n    recipe.input_value_by_name('epw', _epw)\n    recipe.input_value_by_name('ddy', ddy_)\n    recipe.input_value_by_name('north', north_)\n    recipe.input_value_by_name('run-period', run_period_)\n    if _wind_speed_ is not None and os.path.isdir(_wind_speed_):\n        recipe.input_value_by_name('air-speed-matrices', _wind_speed_)\n    else:\n        recipe.input_value_by_name('wind-speed', _wind_speed_)\n    recipe.input_value_by_name('schedule', schedule_)\n    recipe.input_value_by_name('solarcal-parameters', solar_body_par_)\n    recipe.input_value_by_name('radiance-parameters', radiance_par_)\n\n    # run the recipe\n    silent = True if _run > 1 else False\n    project_folder = recipe.run(\n        run_settings_, radiance_check=True, openstudio_check=True, silent=silent)\n\n    # load the results\n    try:\n        env_conds = recipe_result(recipe.output_value_by_name('environmental-conditions', project_folder))\n        utci = recipe_result(recipe.output_value_by_name('utci', project_folder))\n        condition = recipe_result(recipe.output_value_by_name('condition', project_folder))\n        category = recipe_result(recipe.output_value_by_name('category', project_folder))\n        TCP = recipe_result(recipe.output_value_by_name('tcp', project_folder))\n        HSP = recipe_result(recipe.output_value_by_name('hsp', project_folder))\n        CSP = recipe_result(recipe.output_value_by_name('csp', project_folder))\n    except Exception:\n        raise Exception(recipe.failure_message(project_folder))\n", 
  "category": "HB-Energy", 
  "name": "HB UTCI Comfort Map", 
  "description": "Compute spatially-resolved Universal Thermal Climate Index (UTCI) and heat/cold\nstress conditions an EPW and Honeybee model.\n_\nThis recipe uses EnergyPlus to obtain surface temperatures and indoor air\ntemperatures + humidities. Outdoor air temperatures, relative humidities, and\nair speeds are taken directly from the EPW. The energy properties of the model\ngeometry are what determine the outcome of the simulation, though the model's\nRadiance sensor grids are what determine where the comfort mapping occurs.\n_\nLongwave radiant temperatures are obtained by computing spherical view factors\nfrom each sensor to the Room surfaces of the model using Radiance. These view factors\nare then multiplied by the surface temperatures output by EnergyPlus to yield\nlongwave MRT at each sensor. For outdoor sensors, each sensor's sky view is multiplied\nby the EPW sky temperature to account for longwave radiant exchange with the sky.\nAll outdoor context shades and the ground are assumed to be at the EPW air\ntemperature unless they have been modeled as Honeybee rooms.\n_\nA Radiance-based enhanced 2-phase method is used for all shortwave MRT calculations,\nwhich precisely represents direct sun by tracing a ray from each sensor to the\nsolar position. To determine Thermal Comfort Percent (TCP), the occupancy schedules\nof the energy model are used for indoor sensors if no schedule_ is input. Any\nhour of the energy model occupancy schedule that is 0.1 or greater will be\nconsidered occupied. If no schedule_ is input, all hours of the outdoors are\nconsidered occupied.\n-"
}