{
  "version": "1.2.0", 
  "nickname": "ApplyShadeSch", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "hb_objs", 
        "description": "The input honeybee objects with their shade transmittance\nschedules edited.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "list", 
      "name": "_hb_objs", 
      "description": "Honeybee Shades, Apertures, Door, Faces, or Rooms to which the\ninput _trans_sch should be assigned. For the case of a Honeybee Aperture,\nDoor, Face or Room, the ShadeConstruction will be assigned to only the\nchild shades directly assigned to that object. So passing in a Room\nwill not change the schedule of shades assigned to Apertures\nof the Room's Faces. If this is the desired outcome, then the Room\nshould be deconstructed into its child objects before using\nthis component.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "list", 
      "name": "_trans_sch", 
      "description": "A Honeybee ScheduleRuleset or ScheduleFixedInterval to be\napplied to the input _hb_objs. This can also be text for a schedule\nto be looked up in the shade schedule library. If an array of text\nor schedule objects are input here, different schedules will be\nassigned based on cardinal direction, starting with north and\nmoving clockwise.", 
      "type": "System.Object", 
      "default": null
    }
  ], 
  "subcategory": "2 :: Schedules", 
  "code": "\n\ntry:  # import the honeybee-energy extension\n    from honeybee_energy.lib.schedules import schedule_by_identifier\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee_energy:\\n\\t{}'.format(e))\n\ntry:  # import the core honeybee dependencies\n    from honeybee.shade import Shade\n    from honeybee.room import Room\n    from honeybee.face import Face\n    from honeybee.aperture import Aperture\n    from honeybee.door import Door\n    from honeybee.orientation import angles_from_num_orient, face_orient_index\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee:\\n\\t{}'.format(e))\n\ntry:  # import the ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component):\n    # duplicate the initial objects\n    hb_objs = [obj.duplicate() for obj in _hb_objs]\n\n    # process the input schedule\n    for i, sch in enumerate(_trans_sch):\n        if isinstance(sch, str):\n            _trans_sch[i] = schedule_by_identifier(sch)\n\n    # error message for unrecognized object\n    error_msg = 'Input _hb_objs must be a Room, Face, Aperture, Door, or Shade. Not {}.'\n\n    # assign the schedules\n    if len(_trans_sch) == 1:\n        for obj in hb_objs:\n            if isinstance(obj, Shade):\n                obj.properties.energy.transmittance_schedule = _trans_sch[0]\n            elif isinstance(obj, (Aperture, Face, Room, Door)):\n                for shd in obj.shades:\n                    shd.properties.energy.transmittance_schedule = _trans_sch[0]\n            else:\n                raise TypeError(error_msg.format(type(obj)))\n    else:  # assign schedules based on cardinal direction\n        angles = angles_from_num_orient(len(_trans_sch))\n        for obj in hb_objs:\n            if isinstance(obj, (Aperture, Face, Door)):\n                orient_i = face_orient_index(obj, angles)\n                if orient_i is not None:\n                    for shd in obj.shades:\n                        shd.properties.energy.transmittance_schedule = _trans_sch[orient_i]\n            elif isinstance(obj, Shade):\n                obj.properties.energy.transmittance_schedule = _trans_sch[0]\n            elif isinstance(obj, Room):\n                 for shd in obj.shades:\n                    shd.properties.energy.transmittance_schedule = _trans_sch[0]\n            else:\n                raise TypeError(error_msg.format(type(obj)))\n", 
  "category": "HB-Energy", 
  "name": "HB Apply Shade Schedule", 
  "description": "Apply a transmittance schedule to Honeybee Shade objects. Alternatively, it can\nassign a transmittance schedule to all of the child shades of an Aperture, Door,\nFace, or a Room.\n_\nThis component supports the assigning of different schedules based on cardinal\norientation, provided that a list of transmittance schedule are input to\nthe _trans_sch. \n-"
}