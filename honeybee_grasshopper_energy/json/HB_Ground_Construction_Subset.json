{
  "version": "1.3.0", 
  "nickname": "GroundSubset", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "ground_set", 
        "description": "A list of ground constructions that can be used to edit\nor create a ConstructionSet object.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_ground_wall_", 
      "description": "A construction object for underground walls (or text for\nthe identifier of the construction within the library).", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_ground_roof_", 
      "description": "A construction object for underground roofs (or text for\nthe identifier of the construction within the library).", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_ground_floor_", 
      "description": "A construction object for ground-contact floors (or text\nfor the identifier of the construction within the library).", 
      "type": "System.Object", 
      "default": null
    }
  ], 
  "subcategory": "0 :: Basic Properties", 
  "code": "\ntry:  # import honeybee_energy dependencies\n    from honeybee_energy.construction.opaque import OpaqueConstruction\n    from honeybee_energy.lib.constructions import opaque_construction_by_identifier\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee_energy:\\n\\t{}'.format(e))\n\n\ndef opaque_constr(construction, input_name):\n    \"\"\"Get an OpaqueConstrucion from the library if it's a string.\"\"\"\n    if isinstance(construction, str):\n        return opaque_construction_by_identifier(construction)\n    else:\n        assert isinstance(construction, OpaqueConstruction), \\\n            'Expected OpaqueConstruction for {}. Got {}'.format(\n                input_name, type(construction))\n    return construction\n\n\n# go through each input construction\nif _ground_wall_ is not None:\n    _ground_wall_ = opaque_constr(_ground_wall_, '_ground_wall_')\nif _ground_roof_ is not None:\n    _ground_roof_ = opaque_constr(_ground_roof_, '_ground_roof_')\nif _ground_floor_ is not None:\n    _ground_floor_ = opaque_constr(_ground_floor_, '_ground_floor_')\n\n\n# return the final list from the component\nground_set = [_ground_wall_, _ground_roof_, _ground_floor_]\n", 
  "category": "HB-Energy", 
  "name": "HB Ground Construction Subset", 
  "description": "Create a list of ground constructions that can be used to edit or create a\nConstructionSet object.\n-"
}