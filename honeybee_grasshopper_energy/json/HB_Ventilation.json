{
  "version": "1.2.1", 
  "nickname": "Ventilation", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "vent", 
        "description": "An Ventilation object that can be used to create a ProgramType or\nbe assigned directly to a Room.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_name_", 
      "description": "Text to set the name for the Ventilation and to be incorporated\ninto a unique Ventilation identifier. If None, a unique name will\nbe generated.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_flow_per_person_", 
      "description": "A numerical value for the intensity of outdoor air ventilation\nin m3/s per person. This will be added to the _flow_per_area_,\n_flow_per_zone_ and _ach_ to produce the final minimum outdoor\nair specification. Note that setting this value here does not mean\nthat ventilation is varied based on real-time occupancy but rather\nthat the minimum level of ventilation is determined using this value\nand the People object of the Room. To vary ventilation on a timestep\nbasis, a ventilation schedule should be used or the dcv_ option\nshould be selected on the HVAC system if it is available. (Default: 0).", 
      "type": "double", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_flow_per_area_", 
      "description": "A numerical value for the intensity of ventilation in m3/s per square\nmeter of floor area. This will be added to the _flow_per_person_,\n_flow_per_zone_ and _ach_ to produce the final minimum outdoor\nair specification. (Default: 0).", 
      "type": "double", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_flow_per_zone_", 
      "description": "A numerical value for the design level of ventilation in m3/s for\nthe entire zone. This will be added to the _flow_per_person_,\n_flow_per_area_ and _ach_ to produce the final minimum outdoor\nair specification. (Default: 0).", 
      "type": "double", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_ach_", 
      "description": "A numberical value for the design level of ventilation in air changes per hour\n(ACH) for the entire zone. This will be added to the _flow_per_person_,\n_flow_per_area_ and _flow_per_zone_ to produce the final minimum outdoor\nair specification. (Default: 0).", 
      "type": "double", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_schedule_", 
      "description": "An optional fractional schedule for the ventilation over the course\nof the year. The fractional values will get multiplied by the\ntotal design flow rate (determined from the fields above and the\ncalculation_method) to yield a complete ventilation profile. Setting\nthis schedule to be the occupancy schedule of the zone will mimic\ndemand controlled ventilation. If None, a constant design level of\nventilation will be used throughout all timesteps of the\nsimulation. (Default: None).", 
      "type": "System.Object", 
      "default": null
    }
  ], 
  "subcategory": "3 :: Loads", 
  "code": "\ntry:  # import the core honeybee dependencies\n    from honeybee.typing import clean_and_id_ep_string, clean_ep_string\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee:\\n\\t{}'.format(e))\n\ntry:\n    from honeybee_energy.load.ventilation import Ventilation\n    from honeybee_energy.lib.schedules import schedule_by_identifier\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee_energy:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\n# make a default Ventilation name if none is provided\nname = clean_and_id_ep_string('Ventilation') if _name_ is None else \\\n    clean_ep_string(_name_)\n\n# get the schedule\nif isinstance(_schedule_, str):\n    _schedule_ = schedule_by_identifier(_schedule_)\n\n# get default _flow_per_person_, _flow_per_area_, and _ach_\n_flow_per_person_ = _flow_per_person_ if _flow_per_person_ is not None else 0.0\n_flow_per_area_ = _flow_per_area_ if _flow_per_area_ is not None else 0.0\n_flow_per_zone_ = _flow_per_zone_ if _flow_per_zone_ is not None else 0.0\n_ach_ = _ach_ if _ach_ is not None else 0.0\n\n# create the Ventilation object\nvent = Ventilation(name, _flow_per_person_, _flow_per_area_,\n                    _flow_per_zone_, _ach_, _schedule_)\nif _name_ is not None:\n    vent.display_name = _name_\n", 
  "category": "HB-Energy", 
  "name": "HB Ventilation", 
  "description": "Create a Ventilation object that can be used to create a ProgramType or be\nassigned directly to a Room.\n_\nNote the the 4 ventilation types (_flow_per_person_, _flow_per_area_, _flow_per_zone_,\n_ach_) are ultimately summed together to yeild the ventilation design flow rate used\nin the simulation.\n-"
}