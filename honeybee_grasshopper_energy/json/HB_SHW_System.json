{
  "version": "1.3.0", 
  "nickname": "SHW", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "report", 
        "description": "Script variable OSHVACSystems", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "rooms", 
        "description": "The input Rooms with a Service Hot Water system applied.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "list", 
      "name": "_rooms", 
      "description": "Honeybee Rooms to which the input template system will be assigned.\nThis can also be a Honeybee Model for which all Rooms will be\nassigned the SHW system.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_system_type", 
      "description": "Text for the specific type of service hot water system and equipment.\nThe \"HB SHW Templates\" component has a full list of the supported\nsystem templates.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_name_", 
      "description": "Text to set the name for the Service Hot Water system and to be\nincorporated into unique system identifier. If the name is not\nprovided, a random name will be assigned.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_efficiency_", 
      "description": "A number for the efficiency of the heater within the system.\nFor Gas systems, this is the efficiency of the burner. For HeatPump\nsystems, this is the rated COP of the system. For electric systems,\nthis should usually be set to 1. If unspecified this value will\nautomatically be set based on the equipment_type. See below for\nthe default value for each equipment type:\n* Gas_WaterHeater - 0.8\n* Electric_WaterHeater - 1.0\n* HeatPump_WaterHeater - 3.5\n* Gas_TanklessHeater - 0.8\n* Electric_TanklessHeater - 1.0", 
      "type": "double", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_condition_", 
      "description": "A number for the ambient temperature in which the hot water tank\nis located [C]. This can also be a Room in which the tank is\nlocated. (Default: 22).", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_loss_coeff_", 
      "description": "A number for the loss of heat from the water heater tank to the\nsurrounding ambient conditions [W/K]. (Default: 6 W/K).", 
      "type": "double", 
      "default": null
    }
  ], 
  "subcategory": "4 :: HVAC", 
  "code": "\ntry:  # import the honeybee extension\n    from honeybee.typing import clean_and_id_ep_string, clean_ep_string\n    from honeybee.model import Model\n    from honeybee.room import Room\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee:\\n\\t{}'.format(e))\n\ntry:  # import the honeybee-energy extension\n    from honeybee_energy.shw import SHWSystem\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee_energy:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component):\n    # extract any rooms from input Models and duplicate the rooms\n    rooms = []\n    for hb_obj in _rooms:\n        if isinstance(hb_obj, Model):\n            rooms.extend([room.duplicate() for room in hb_obj.rooms])\n        elif isinstance(hb_obj, Room):\n            rooms.append(hb_obj.duplicate())\n        else:\n            raise ValueError(\n                'Expected Honeybee Room or Model. Got {}.'.format(type(hb_obj)))\n\n    # set default value for the inputs\n    name = clean_and_id_ep_string('SHW System') if _name_ is None \\\n        else clean_ep_string(_name_)\n    if _condition_ is None:\n        _condition_ = 22\n    elif isinstance(_condition_, Room):\n        _condition_ = _condition_.identifier\n    else:\n        try:\n            _condition_ = float(_condition_)\n        except Exception:\n            raise ValueError(\n                'Input _condition_ must be a Room in which the system is located '\n                'or a number\\nfor the ambient temperature in which the hot water '\n                'tank is located [C].\\nGot {}.'.format(type(_condition_))\n            )\n    _loss_coeff_ = 6 if _loss_coeff_ is None else _loss_coeff_\n\n    # create the SHW System\n    shw = SHWSystem(name, _system_type, _efficiency_, _condition_, _loss_coeff_)\n    if _name_ is not None:\n        shw.display_name = _name_\n\n    # apply the HVAC system to the rooms\n    for room in rooms:\n        if room.properties.energy.service_hot_water is not None:\n            room.properties.energy.shw = shw\n", 
  "category": "HB-Energy", 
  "name": "HB SHW System", 
  "description": "Apply a template Service Hot Water (SHW) system to Honeybee Rooms.\n_\nNote that the rooms must have hot water loads assigned to them in order for them\nto be connected to the system.\n-"
}