{
  "description": "Create a simulation parameter object that carries a complete set of EnergyPlus\nsimulation settings and can be plugged into the \"HB Model To OSM\" component.\n-", 
  "outputs": [
    [
      {
        "type": null, 
        "name": "sim_par", 
        "description": "A SimulationParameter object that can be connected to the\n\"HB Model To IDF\" component in order to specify EnergyPlus\nsimulation settings", 
        "access": "None", 
        "default": null
      }
    ]
  ], 
  "code": "\ntry:\n    from ladybug.dt import Date, DateTime\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug:\\n\\t{}'.format(e))\n\ntry:\n    from honeybee_energy.simulation.output import SimulationOutput\n    from honeybee_energy.simulation.runperiod import RunPeriod\n    from honeybee_energy.simulation.daylightsaving import DaylightSavingTime\n    from honeybee_energy.simulation.parameter import SimulationParameter\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee_energy:\\n\\t{}'.format(e))\n\ntry:  # import the ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.togeometry import to_vector2d\n    from ladybug_{{cad}}.{{plugin}} import turn_off_old_tag\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\nturn_off_old_tag(ghenv.Component)\n\n\n# set default simulation outputs\nif _output_ is None:\n    _output_ = SimulationOutput()\n    _output_.add_zone_energy_use()\n    _output_.add_hvac_energy_use()\n\n# set default simulation run period\n_run_period_ = RunPeriod.from_analysis_period(_run_period_) \\\n    if _run_period_ is not None else RunPeriod()\n\n# set the daylight savings if it is input\nif daylight_saving_ is not None:\n    daylight_saving = DaylightSavingTime.from_analysis_period(daylight_saving_)\n    _run_period_.daylight_saving_time = daylight_saving\n\n# set the holidays if requested.\nif len(holidays_) != 0:\n    try:\n        dates = tuple(Date.from_date_string(date) for date in holidays_)\n    except ValueError:\n        dates = tuple(DateTime.from_date_time_string(date).date for date in holidays_)\n    _run_period_.holidays = dates\n\n# set the start day of the week if it is input\nif _start_dow_ is not None:\n    _run_period_.start_day_of_week = _start_dow_.title()\n\n# set the default timestep\n_timestep_ = _timestep_ if _timestep_ is not None else 6\n\n# set the default timestep\n_terrain_ = _terrain_.title() if _terrain_ is not None else 'City'\n\n# return final simulation parameters\nsim_par = SimulationParameter(output=_output_,\n                              run_period=_run_period_,\n                              timestep=_timestep_,\n                              simulation_control=_sim_control_,\n                              shadow_calculation=_shadow_calc_,\n                              sizing_parameter=_sizing_,\n                              terrain_type=_terrain_)\n\n# set the north if it is not defaulted\nif _north_ is not None:\n    try:\n        sim_par.north_vector = to_vector2d(_north_)\n    except AttributeError:  # north angle instead of vector\n        sim_par.north_angle = float(_north_)\n", 
  "name": "HB Simulation Parameter", 
  "version": "1.7.1", 
  "category": "HB-Energy", 
  "subcategory": "5 :: Simulate", 
  "nickname": "SimPar", 
  "inputs": [
    {
      "type": "System.Object", 
      "name": "_north_", 
      "description": "A number between -360 and 360 for the counterclockwise\ndifference between the North and the positive Y-axis in degrees.\n90 is West and 270 is East. (Default: 0)", 
      "access": "item", 
      "default": null
    }, 
    {
      "type": "System.Object", 
      "name": "_output_", 
      "description": "A SimulationOutput that lists the desired outputs from the\nsimulation and the format in which to report them. This can be\ncreated using the \"HB Simulation Output\" component. Default is to\nrequest zone energy use at an hourly timestep.", 
      "access": "item", 
      "default": null
    }, 
    {
      "type": "System.Object", 
      "name": "_run_period_", 
      "description": "A ladybyg AnalysisPeriod object to describe the time period\nover which to run the simulation. the default is to run the simulation\nfor the whole year.", 
      "access": "item", 
      "default": null
    }, 
    {
      "type": "System.Object", 
      "name": "daylight_saving_", 
      "description": "An optional ladybug AnalysisPeriod object to describe\nstart and end of daylight savings time in the simulation. If None, no\ndaylight savings time will be applied to the simulation.", 
      "access": "item", 
      "default": null
    }, 
    {
      "type": "string", 
      "name": "holidays_", 
      "description": "A list of Ladybug Date objects for the holidays within the\nsimulation. These should be in the format of 'DD Month' (eg. '1 Jan',\n'25 Dec'). If None, no holidays are applied. Default: None.", 
      "access": "list", 
      "default": null
    }, 
    {
      "type": "string", 
      "name": "_start_dow_", 
      "description": "Text for the day of the week on which the simulation\nstarts. Default: 'Sunday'. Choose from the following:\n* Sunday\n* Monday\n* Tuesday\n* Wednesday\n* Thursday\n* Friday\n* Saturday", 
      "access": "item", 
      "default": null
    }, 
    {
      "type": "int", 
      "name": "_timestep_", 
      "description": "An integer for the number of timesteps per hour at which the\ncalculation will be run. Default: 6. The following values are acceptable:\n(1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30, 60)", 
      "access": "item", 
      "default": 6
    }, 
    {
      "type": "string", 
      "name": "_terrain_", 
      "description": "Text for the terrain type in which the model sits, used to determine\nthe wind profile. Default: 'City'. Choose from:\n* Ocean\n* Country\n* Suburbs\n* Urban\n* City", 
      "access": "item", 
      "default": null
    }, 
    {
      "type": "System.Object", 
      "name": "_sim_control_", 
      "description": "A SimulationControl object that describes which types\nof calculations to run. This can be generated from the \"HB\nSimulation Control\" component. Default: perform a sizing calculation\nbut only run the simulation for the RunPeriod.", 
      "access": "item", 
      "default": null
    }, 
    {
      "type": "System.Object", 
      "name": "_shadow_calc_", 
      "description": "A ShadowCalculation object describing settings for the\nEnergyPlus Shadow Calculation. This can be generated from the \"HB\nShadow Calculation\" component. Default: Average over 30 days with\nFullExteriorWithReflections.", 
      "access": "item", 
      "default": null
    }, 
    {
      "type": "System.Object", 
      "name": "_sizing_", 
      "description": "A SizingParameter object with criteria for sizing the heating\nand cooling system.  This can be generated from the \"HB Sizing\nParameter\" component.", 
      "access": "item", 
      "default": null
    }
  ]
}